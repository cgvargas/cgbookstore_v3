# Generated by Django 5.0.3 on 2025-10-25 12:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0009_add_purchase_partner_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DebateTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('description', models.TextField(verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='Fixado')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Bloqueado')),
                ('views_count', models.IntegerField(default=0, verbose_name='Visualizações')),
                ('posts_count', models.IntegerField(default=0, verbose_name='Posts')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debate_topics', to='core.book')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_topics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tópico de Debate',
                'verbose_name_plural': 'Tópicos de Debate',
                'ordering': ['-is_pinned', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DebatePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('edited_at', models.DateTimeField(blank=True, null=True, verbose_name='Editado em')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Deletado')),
                ('votes_score', models.IntegerField(default=0, verbose_name='Pontuação')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debate_posts', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='debates.debatepost')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='debates.debatetopic')),
            ],
            options={
                'verbose_name': 'Post de Debate',
                'verbose_name_plural': 'Posts de Debate',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DebateVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('up', 'Positivo'), ('down', 'Negativo')], max_length=4, verbose_name='Tipo de Voto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='debates.debatepost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debate_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Voto em Debate',
                'verbose_name_plural': 'Votos em Debates',
            },
        ),
        migrations.AddIndex(
            model_name='debatetopic',
            index=models.Index(fields=['-created_at'], name='debates_deb_created_9024b3_idx'),
        ),
        migrations.AddIndex(
            model_name='debatetopic',
            index=models.Index(fields=['book', '-created_at'], name='debates_deb_book_id_703bb8_idx'),
        ),
        migrations.AddIndex(
            model_name='debatepost',
            index=models.Index(fields=['topic', 'created_at'], name='debates_deb_topic_i_93e984_idx'),
        ),
        migrations.AddIndex(
            model_name='debatepost',
            index=models.Index(fields=['author', '-created_at'], name='debates_deb_author__830818_idx'),
        ),
        migrations.AddIndex(
            model_name='debatevote',
            index=models.Index(fields=['post', 'vote_type'], name='debates_deb_post_id_0b38fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='debatevote',
            unique_together={('post', 'user')},
        ),
    ]
