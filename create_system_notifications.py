"""
Script de Teste CORRIGIDO: Criar System Notifications
CGBookStore v3

Cria apenas SystemNotifications (n√£o precisa de reading_progress)
"""

import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cgbookstore.settings')
django.setup()

from accounts.models import SystemNotification
from django.contrib.auth import get_user_model

User = get_user_model()


def criar_system_notifications():
    """Cria 4 System Notifications de teste"""
    print("=" * 60)
    print("CRIANDO SYSTEM NOTIFICATIONS DE TESTE")
    print("=" * 60)

    user = User.objects.first()

    if not user:
        print("‚ùå Nenhum usu√°rio encontrado!")
        return

    print(f"\nCriando notifica√ß√µes para: {user.username}\n")

    # 1. Atualiza√ß√£o do Sistema
    sn1 = SystemNotification.objects.create(
        user=user,
        notification_type='system_update',
        message='üéâ Sistema de notifica√ß√µes v3.0 est√° ativo!',
        priority=1,
        is_read=False
    )
    print(f"‚úÖ [{sn1.id}] System Update - Prioridade Baixa")

    # 2. Lan√ßamento de Livro
    sn2 = SystemNotification.objects.create(
        user=user,
        notification_type='book_launch',
        message='üìö Novo lan√ßamento: "Django Avan√ßado" dispon√≠vel agora!',
        priority=2,
        is_read=False
    )
    print(f"‚úÖ [{sn2.id}] Book Launch - Prioridade M√©dia")

    # 3. Evento Liter√°rio
    sn3 = SystemNotification.objects.create(
        user=user,
        notification_type='literary_event',
        message='üé≠ Evento: Encontro de Autores - Amanh√£ √†s 19h!',
        priority=3,
        is_read=False
    )
    print(f"‚úÖ [{sn3.id}] Literary Event - Prioridade Alta")

    # 4. Manuten√ß√£o
    sn4 = SystemNotification.objects.create(
        user=user,
        notification_type='system_update',
        message='üîß Manuten√ß√£o programada: Domingo 02h-04h',
        priority=1,
        is_read=False
    )
    print(f"‚úÖ [{sn4.id}] Maintenance - Prioridade Baixa")

    print(f"\n‚ú® 4 System Notifications criadas com sucesso!")
    print(f"\nüîî Total de notifica√ß√µes n√£o lidas para {user.username}:")

    # Contar n√£o lidas
    total = SystemNotification.objects.filter(user=user, is_read=False).count()
    print(f"   System Notifications: {total}")


if __name__ == '__main__':
    criar_system_notifications()