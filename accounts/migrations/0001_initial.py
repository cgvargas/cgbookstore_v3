# Generated by Django 5.0.3 on 2025-10-04 12:22

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0006_event'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biografia')),
                ('reading_goal', models.PositiveIntegerField(default=12, help_text='Quantos livros você pretende ler este ano?', verbose_name='Meta Anual de Leitura')),
                ('points', models.PositiveIntegerField(default=0, help_text='Pontos acumulados através de atividades', verbose_name='Pontos')),
                ('favorite_genre', models.CharField(blank=True, max_length=100, verbose_name='Gênero Favorito')),
                ('library_is_public', models.BooleanField(default=False, help_text='Permitir que outros usuários vejam sua biblioteca', verbose_name='Biblioteca Pública')),
                ('show_reading_progress', models.BooleanField(default=True, help_text='Exibir progresso de leitura na biblioteca', verbose_name='Mostrar Progresso de Leitura')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil de Usuário',
                'verbose_name_plural': 'Perfis de Usuários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(help_text='Nota de 1 a 5 estrelas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Avaliação')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Título da Resenha')),
                ('review_text', models.TextField(blank=True, help_text='Sua opinião sobre o livro', verbose_name='Resenha')),
                ('is_public', models.BooleanField(default=False, help_text='Permitir que outros usuários vejam sua resenha', verbose_name='Resenha Pública')),
                ('contains_spoilers', models.BooleanField(default=False, help_text='Marque se sua resenha revela partes da história', verbose_name='Contém Spoilers')),
                ('would_recommend', models.BooleanField(default=True, help_text='Você recomendaria este livro?', verbose_name='Recomendaria')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='Quantas pessoas acharam esta resenha útil', verbose_name='Úteis')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reviews', to='core.book', verbose_name='Livro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Avaliação de Livro',
                'verbose_name_plural': 'Avaliações de Livros',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'book'], name='accounts_bo_user_id_dcbf04_idx'), models.Index(fields=['book', '-created_at'], name='accounts_bo_book_id_921817_idx'), models.Index(fields=['is_public', '-created_at'], name='accounts_bo_is_publ_cfbb5f_idx')],
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='BookShelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelf_type', models.CharField(choices=[('favorites', 'Favoritos'), ('to_read', 'Quero Ler'), ('reading', 'Lendo'), ('read', 'Lidos'), ('abandoned', 'Abandonados'), ('custom', 'Personalizada')], default='to_read', max_length=20, verbose_name='Tipo de Prateleira')),
                ('custom_shelf_name', models.CharField(blank=True, help_text='Obrigatório se tipo = Personalizada', max_length=100, null=True, verbose_name='Nome da Prateleira Personalizada')),
                ('notes', models.TextField(blank=True, help_text='Anotações privadas sobre o livro', verbose_name='Notas Pessoais')),
                ('is_public', models.BooleanField(default=False, help_text='Permitir que outros vejam este livro na sua biblioteca', verbose_name='Público')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Adição')),
                ('started_reading', models.DateTimeField(blank=True, null=True, verbose_name='Início da Leitura')),
                ('finished_reading', models.DateTimeField(blank=True, null=True, verbose_name='Término da Leitura')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_shelves', to='core.book', verbose_name='Livro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookshelves', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Prateleira de Livros',
                'verbose_name_plural': 'Prateleiras de Livros',
                'ordering': ['-date_added'],
                'indexes': [models.Index(fields=['user', 'shelf_type'], name='accounts_bo_user_id_fa3bf7_idx'), models.Index(fields=['user', 'book'], name='accounts_bo_user_id_1d34bc_idx')],
                'unique_together': {('user', 'book', 'shelf_type', 'custom_shelf_name')},
            },
        ),
        migrations.CreateModel(
            name='ReadingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_page', models.PositiveIntegerField(default=0, help_text='Última página lida', verbose_name='Página Atual')),
                ('total_pages', models.PositiveIntegerField(help_text='Total de páginas do livro', verbose_name='Total de Páginas')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Início da Leitura')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Término da Leitura')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('reading_notes', models.TextField(blank=True, help_text='Anotações, reflexões, citações...', verbose_name='Notas de Leitura')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to='core.book', verbose_name='Livro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Progresso de Leitura',
                'verbose_name_plural': 'Progressos de Leitura',
                'ordering': ['-last_updated'],
                'indexes': [models.Index(fields=['user', 'book'], name='accounts_re_user_id_ca7973_idx'), models.Index(fields=['user', '-last_updated'], name='accounts_re_user_id_116278_idx')],
                'unique_together': {('user', 'book')},
            },
        ),
    ]
